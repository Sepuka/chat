// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	domain "github.com/sepuka/chat/internal/domain"
	mock "github.com/stretchr/testify/mock"

	pg "github.com/go-pg/pg"
)

// PoolRepository is an autogenerated mock type for the PoolRepository type
type PoolRepository struct {
	mock.Mock
}

// Engage provides a mock function with given fields: _a0, _a1
func (_m *PoolRepository) Engage(_a0 *domain.Pool, _a1 *pg.Tx) error {
	ret := _m.Called(_a0, _a1)

	var r0 error
	if rf, ok := ret.Get(0).(func(*domain.Pool, *pg.Tx) error); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// OccupyVacant provides a mock function with given fields:
func (_m *PoolRepository) OccupyVacant() (*domain.Pool, *pg.Tx, error) {
	ret := _m.Called()

	var r0 *domain.Pool
	if rf, ok := ret.Get(0).(func() *domain.Pool); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*domain.Pool)
		}
	}

	var r1 *pg.Tx
	if rf, ok := ret.Get(1).(func() *pg.Tx); ok {
		r1 = rf()
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*pg.Tx)
		}
	}

	var r2 error
	if rf, ok := ret.Get(2).(func() error); ok {
		r2 = rf()
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}
